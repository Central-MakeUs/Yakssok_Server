name: yakssok-deploy

on:
  push:
    branches: [ "dev" ]
    paths:
      - "yakssok/**"
      - "docker-compose.yml"
      - ".github/workflows/yakssok-deploy.yml"

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v3

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 📦 Build and Push Docker Image
        run: |
          cd yakssok
          echo "🔐 Create application.yml"
          mkdir -p src/main/resources
          echo "${{ secrets.DEV_YML }}" > src/main/resources/application.yml

          echo "🏗️ Build Spring Boot"
          chmod +x ./gradlew
          ./gradlew clean build -x test

          echo "🐳 Docker Build & Push :latest"
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/yakssok:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/yakssok:latest

      - name: 🚀 Deploy to EC2 with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "📁 이동: docker-compose.yml이 있는 디렉토리로"
            cd ~/Yakssok_Server/yakssok

            echo "🐳 Docker 로그인"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "🧹 기존 이미지 삭제"
            docker image rm -f ${{ secrets.DOCKER_USERNAME }}/yakssok:latest || true

            echo "📦 최신 이미지 Pull"
            docker compose pull app

            echo "🔄 컨테이너 재시작"
            docker compose down --remove-orphans
            docker compose up -d --force-recreate

            echo "🧹 이미지 정리"
            docker image prune -a -f
